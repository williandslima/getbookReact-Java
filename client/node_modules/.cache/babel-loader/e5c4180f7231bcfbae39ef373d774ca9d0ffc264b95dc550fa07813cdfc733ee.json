{"ast":null,"code":"var _jsxFileName = \"/Users/wslima/Documents/gitClone/devJavaXReactJs/client/src/pages/NewPostagem/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link, useParams } from 'react-router-dom';\nimport './styles.css';\nimport api from '../../services/api';\nimport logoImage from '../../assets/logo.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewPostagem() {\n  _s();\n  const [id, setId] = useState(null);\n  const [nome, setNome] = useState('');\n  const [descricao, setDescricao] = useState('');\n  const {\n    postagemId\n  } = useParams();\n  const recebeToken = localStorage.getItem('accessToken');\n  const navigate = useNavigate();\n  async function loadPostagem() {\n    try {\n      const response = await api.get(`postagens/${postagemId}`, {\n        headers: {\n          Authorization: recebeToken\n        }\n      });\n      setId(response.data.id);\n      setNome(response.data.nome);\n      setDescricao(response.data.descricao);\n    } catch (err) {\n      alert('Erro ao carregar! Tente novamente');\n      navigate('/postagens');\n    }\n  }\n  useEffect(() => {\n    fetchUser();\n    if (postagemId === '0') return;else loadPostagem();\n  }, [postagemId]);\n  async function salvarOuAtualizar(e) {\n    e.preventDefault();\n    const data = {\n      nome,\n      descricao\n    };\n    try {\n      if (postagemId === '0') {\n        await api.post('postagens', data, {\n          headers: {\n            Authorization: recebeToken\n          }\n        });\n        alert('Cadastro Salvo');\n      } else {\n        data.id = id;\n        await api.put('postagens', data, {\n          headers: {\n            Authorization: recebeToken\n          }\n        });\n        alert('Cadastro atualizado');\n      }\n      navigate('/postagens');\n    } catch (err) {\n      alert('Erro ao salvar a postagem');\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-book-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImage,\n          alt: \"Erudio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [postagemId === '0' ? 'Adicionar nova ' : 'Atualizar nova', \" Postagem \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Entre com as informacoes e clique em \", postagemId === '0' ? \"'Adicionar'\" : \"'Atualizar'\", \" Cadastrar postagem! \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"back-link\",\n          to: \"/postagens\",\n          children: \"Voltar para postagens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: salvarOuAtualizar,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nome\",\n          name: \"Nome\",\n          value: nome,\n          onChange: e => setNome(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Descricao do livro\",\n          value: descricao,\n          onChange: e => setDescricao(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: [postagemId === '0' ? 'Adicionar' : 'Atualizar', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(NewPostagem, \"WkVuoqbZtpgXdxr1a4Nuash7YFs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NewPostagem;\nvar _c;\n$RefreshReg$(_c, \"NewPostagem\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","useParams","api","logoImage","NewPostagem","id","setId","nome","setNome","descricao","setDescricao","postagemId","recebeToken","localStorage","getItem","navigate","loadPostagem","response","get","headers","Authorization","data","err","alert","fetchUser","salvarOuAtualizar","e","preventDefault","post","put","target","value"],"sources":["/Users/wslima/Documents/gitClone/devJavaXReactJs/client/src/pages/NewPostagem/index.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { useNavigate, Link, useParams} from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nimport api from '../../services/api'\r\n\r\nimport logoImage from '../../assets/logo.svg'\r\n\r\nexport default function NewPostagem() {\r\n\r\n    \r\n    const [id, setId] = useState(null);\r\n    const [nome, setNome] = useState('');\r\n    const [descricao, setDescricao] = useState('');\r\n\r\n    const {postagemId} = useParams();\r\n\r\n    const recebeToken = localStorage.getItem('accessToken');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    async function loadPostagem() {\r\n        try {\r\n            const response = await api.get(`postagens/${postagemId}`,{\r\n                headers:{\r\n                    Authorization: recebeToken\r\n                }\r\n            })\r\n            setId (response.data.id)\r\n            setNome(response.data.nome)\r\n            setDescricao(response.data.descricao)\r\n            \r\n        } catch (err) {\r\n            alert('Erro ao carregar! Tente novamente');\r\n            navigate('/postagens');\r\n        }\r\n    }\r\n\r\n    \r\n    useEffect(() =>{\r\n        fetchUser();\r\n        if (postagemId === '0') return; \r\n        else loadPostagem();\r\n    }, [postagemId]);\r\n\r\n\r\n    async function salvarOuAtualizar(e){\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n                nome,\r\n                descricao\r\n        };\r\n        try {\r\n            if (postagemId === '0') {\r\n                await api.post('postagens', data, {\r\n                    headers: {\r\n                        Authorization: recebeToken\r\n                    }\r\n                });\r\n            alert('Cadastro Salvo')\r\n\r\n            } else {\r\n                data.id = id;\r\n                await api.put('postagens', data, {\r\n                    headers: {\r\n                        Authorization: recebeToken\r\n                    }\r\n                });\r\n            alert('Cadastro atualizado')\r\n            }\r\n\r\n            navigate('/postagens');\r\n        } catch (err) {\r\n            alert('Erro ao salvar a postagem')\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"new-book-container\">\r\n             <div className=\"content\">\r\n                <section className=\"form\">\r\n                <img src={logoImage} alt=\"Erudio\"/>\r\n                <h1>{postagemId === '0' ? 'Adicionar nova ' : 'Atualizar nova' } Postagem </h1>\r\n                <p> Entre com as informacoes e clique em {postagemId === '0' ? \"'Adicionar'\" : \"'Atualizar'\" } Cadastrar postagem! </p>\r\n                    <Link className=\"back-link\" to=\"/postagens\">\r\n                        Voltar para postagens\r\n                    </Link>\r\n                </section>\r\n                <form onSubmit={salvarOuAtualizar}>\r\n                     <input\r\n                        type=\"text\" placeholder=\"Nome\" name=\"Nome\"\r\n                        value={nome}\r\n                        onChange={e => setNome(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"text\" placeholder=\"Descricao do livro\"\r\n                        value={descricao}\r\n                        onChange={e => setDescricao(e.target.value)}\r\n                    />                  \r\n                    <button className=\"button\" type=\"submit\">{postagemId === '0' ? 'Adicionar' : 'Atualizar' } </button>\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}